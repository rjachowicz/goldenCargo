create table vehicle_services
(
    cost             double precision,
    is_deleted       boolean      not null,
    created_at       timestamp(6) not null,
    next_service_due timestamp(6),
    service_date     timestamp(6),
    service_id       bigint generated by default as identity
        primary key,
    updated_at       timestamp(6) not null,
    vehicle_id       bigint       not null,
    service_type     varchar(50),
    service_center   varchar(100),
    description      varchar(255)
);

alter table vehicle_services
    owner to postgres;

create table clients
(
    client_id      bigint generated by default as identity
        primary key,
    created_at     timestamp(6) not null,
    is_deleted     boolean      not null,
    updated_at     timestamp(6) not null,
    address        varchar(255) not null,
    contact_person varchar(100),
    email          varchar(100) not null,
    invoice_type   varchar(255)
        constraint clients_invoice_type_check
            check ((invoice_type)::text = ANY
                   ((ARRAY ['CLIENT'::character varying, 'SUBCONTRACTOR'::character varying, 'SUPPLIER'::character varying, 'OTHER'::character varying])::text[])),
    name           varchar(100) not null,
    nip            varchar(20)  not null,
    phone          varchar(20)
);

alter table clients
    owner to postgres;

create table client_orders
(
    client_order_id bigint generated by default as identity
        primary key,
    created_at      timestamp(6) not null,
    is_deleted      boolean      not null,
    updated_at      timestamp(6) not null,
    invoice_type    varchar(255)
        constraint client_orders_invoice_type_check
            check ((invoice_type)::text = ANY
                   ((ARRAY ['CLIENT'::character varying, 'SUBCONTRACTOR'::character varying, 'SUPPLIER'::character varying, 'OTHER'::character varying])::text[])),
    order_date      timestamp(6),
    payment_status  varchar(255)
        constraint client_orders_payment_status_check
            check ((payment_status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PAID'::character varying, 'UNPAID'::character varying, 'PARTIAL'::character varying])::text[])),
    status          varchar(255) not null
        constraint client_orders_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PENDING'::character varying, 'CONFIRMED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying, 'CLOSED'::character varying])::text[])),
    total_amount    double precision,
    client_id       bigint
        constraint fksvtx3xcntbrypx5rib5qq0ed6
            references clients
);

alter table client_orders
    owner to postgres;

create table client_invoices
(
    invoice_id      bigint generated by default as identity
        primary key,
    created_at      timestamp(6)     not null,
    is_deleted      boolean          not null,
    updated_at      timestamp(6)     not null,
    date_issued     timestamp(6)     not null,
    due_date        timestamp(6)     not null,
    invoice_number  varchar(50)      not null
        constraint ukrc9xa38o845ua4v3nqpb2jotu
            unique,
    payment_status  varchar(255)     not null
        constraint client_invoices_payment_status_check
            check ((payment_status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PAID'::character varying, 'UNPAID'::character varying, 'PARTIAL'::character varying])::text[])),
    total_amount    double precision not null,
    client_id       bigint           not null
        constraint fkfaki7doww8rveci8277p6o72d
            references clients,
    client_order_id bigint           not null
        constraint fk586j36w7ydi23hn3o2fugjjsu
            references client_orders
);

alter table client_invoices
    owner to postgres;

create table goods
(
    goods_id                      bigint generated by default as identity
        primary key,
    created_at                    timestamp(6)     not null,
    is_deleted                    boolean          not null,
    updated_at                    timestamp(6)     not null,
    description                   varchar(255),
    dimensions                    varchar(100),
    name                          varchar(100)     not null,
    special_handling_instructions varchar(255)     not null,
    weight                        double precision not null
);

alter table goods
    owner to postgres;

create table client_order_goods
(
    client_order_id bigint not null
        constraint fk7wlyqvibm0p8gyohltmttxo4h
            references client_orders,
    goods_id        bigint not null
        constraint fk8fly7m5goga08pim7dc9bdgrr
            references goods,
    primary key (client_order_id, goods_id)
);

alter table client_order_goods
    owner to postgres;

create table invoices
(
    invoice_id     bigint generated by default as identity
        primary key,
    created_at     timestamp(6)     not null,
    is_deleted     boolean          not null,
    updated_at     timestamp(6)     not null,
    date_issued    timestamp(6)     not null,
    due_date       timestamp(6)     not null,
    file_url       varchar(255),
    invoice_number varchar(50)      not null
        constraint ukl1x55mfsay7co0r3m9ynvipd5
            unique,
    invoice_type   varchar(255)     not null
        constraint invoices_invoice_type_check
            check ((invoice_type)::text = ANY
                   ((ARRAY ['CLIENT'::character varying, 'SUBCONTRACTOR'::character varying, 'SUPPLIER'::character varying, 'OTHER'::character varying])::text[])),
    payment_status varchar(255)     not null
        constraint invoices_payment_status_check
            check ((payment_status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PAID'::character varying, 'UNPAID'::character varying, 'PARTIAL'::character varying])::text[])),
    related_id     bigint,
    total_amount   double precision not null
);

alter table invoices
    owner to postgres;

create table locations
(
    location_id bigint generated by default as identity
        primary key,
    created_at  timestamp(6) not null,
    is_deleted  boolean      not null,
    updated_at  timestamp(6) not null,
    address     varchar(255),
    city        varchar(50),
    country     varchar(50),
    latitude    double precision,
    longitude   double precision,
    name        varchar(100),
    postal_code varchar(20),
    state       varchar(50)
);

alter table locations
    owner to postgres;

create table roles
(
    role_id     bigint generated by default as identity
        primary key,
    created_at  timestamp(6) not null,
    is_deleted  boolean      not null,
    updated_at  timestamp(6) not null,
    description varchar(255),
    name        varchar(50)  not null
        constraint ukofx66keruapi6vyqpv6f2or37
            unique
);

alter table roles
    owner to postgres;

create table routes
(
    route_id          bigint generated by default as identity
        primary key,
    created_at        timestamp(6) not null,
    is_deleted        boolean      not null,
    updated_at        timestamp(6) not null,
    distance          double precision,
    estimated_time    double precision,
    preferred_route   varchar(255),
    end_location_id   bigint       not null
        constraint fktqxldvq6vfex3mna2wxpuw9an
            references locations,
    start_location_id bigint       not null
        constraint fkja5uqif3mnj3ff3idvepoifar
            references locations
);

alter table routes
    owner to postgres;

create table users
(
    user_id      bigint generated by default as identity
        primary key,
    created_at   timestamp(6) not null,
    is_deleted   boolean      not null,
    updated_at   timestamp(6) not null,
    address      varchar(255) not null,
    email        varchar(100) not null
        constraint uk6dotkott2kjsp8vw4d0m25fb7
            unique,
    first_name   varchar(50)  not null,
    last_name    varchar(50)  not null,
    password     varchar(255) not null,
    phone_number varchar(20)  not null,
    status       varchar(255) not null
        constraint users_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'ACTIVE'::character varying, 'INACTIVE'::character varying, 'BANED'::character varying])::text[])),
    username     varchar(50)  not null
        constraint ukr43af9ap4edm43mmtq01oddj6
            unique
);

alter table users
    owner to postgres;

create table drivers
(
    driver_id                  bigint generated by default as identity
        primary key,
    created_at                 timestamp(6) not null,
    is_deleted                 boolean      not null,
    updated_at                 timestamp(6) not null,
    date_of_birth              timestamp(6),
    driver_status              varchar(255) not null
        constraint drivers_driver_status_check
            check ((driver_status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'ACTIVE'::character varying, 'INACTIVE'::character varying, 'AVAILABLE'::character varying, 'OCCUPIED'::character varying])::text[])),
    hire_date                  timestamp(6) not null,
    license_category           varchar(10),
    license_number             varchar(50)  not null
        constraint ukcr60ij36fuvtcb87298g6rct6
            unique,
    medical_certificate_expiry timestamp(6) not null,
    user_id                    bigint
        constraint ukojm6yjeacqc5cthc73k5twsnj
            unique
        constraint fkfscpnjt46gco44xh86l99rxh7
            references users
);

alter table drivers
    owner to postgres;

create table driver_reports
(
    driver_report_id bigint generated by default as identity
        primary key,
    created_at       timestamp(6) not null,
    is_deleted       boolean      not null,
    updated_at       timestamp(6) not null,
    content          varchar(255),
    date             timestamp(6) not null,
    driver_id        bigint       not null
        constraint fk8h9orxv55m1wvo5si3o8976h8
            references drivers
);

alter table driver_reports
    owner to postgres;

create table logisticians
(
    logistics_id bigint generated by default as identity
        primary key,
    created_at   timestamp(6) not null,
    is_deleted   boolean      not null,
    updated_at   timestamp(6) not null,
    department   varchar(50),
    user_id      bigint       not null
        constraint uk31nqav5ilanlqmvyex7385f11
            unique
        constraint fk18ep9u36sfxsotw3uyh6knpmd
            references users
);

alter table logisticians
    owner to postgres;

create table messages
(
    message_id  bigint generated by default as identity
        primary key,
    created_at  timestamp(6) not null,
    is_deleted  boolean      not null,
    updated_at  timestamp(6) not null,
    content     varchar(255) not null,
    date_sent   timestamp(6) not null,
    read_status boolean      not null,
    subject     varchar(255) not null,
    receiver_id bigint       not null
        constraint fkt05r0b6n0iis8u7dfna4xdh73
            references users,
    sender_id   bigint       not null
        constraint fk4ui4nnwntodh6wjvck53dbk9m
            references users
);

alter table messages
    owner to postgres;

create table news
(
    news_id     bigint generated by default as identity
        primary key,
    created_at  timestamp(6) not null,
    is_deleted  boolean      not null,
    updated_at  timestamp(6) not null,
    content     varchar(255) not null,
    date_posted timestamp(6) not null,
    graphic     varchar(255),
    title       varchar(255) not null,
    posted_by   bigint       not null
        constraint fkakrgw7fj4kjo8k64r92w4oed
            references users
);

alter table news
    owner to postgres;

create table notifications
(
    notification_id bigint generated by default as identity
        primary key,
    created_at      timestamp(6) not null,
    is_deleted      boolean      not null,
    updated_at      timestamp(6) not null,
    date_sent       timestamp(6) not null,
    message         varchar(255),
    read_status     boolean      not null,
    user_id         bigint       not null
        constraint fk9y21adhxn0ayjhfocscqox7bh
            references users
);

alter table notifications
    owner to postgres;

create table password_reset_token
(
    id           bigint generated by default as identity
        primary key,
    expiry_date  timestamp(6) not null,
    token        varchar(255) not null
        constraint ukg0guo4k8krgpwuagos61oc06j
            unique,
    user_user_id bigint       not null
        constraint fkpl1vwsq7gglhe77ckqd6922rn
            references users
);

alter table password_reset_token
    owner to postgres;

create table reports
(
    report_id      bigint generated by default as identity
        primary key,
    created_at     timestamp(6) not null,
    is_deleted     boolean      not null,
    updated_at     timestamp(6) not null,
    content        varchar(255),
    date_generated timestamp(6) not null,
    report_type    varchar(50),
    generated_by   bigint       not null
        constraint fk6oup43skcuxmgopql1obft8lo
            references users
);

alter table reports
    owner to postgres;

create table user_roles
(
    role_id     bigint       not null
        constraint fkh8ciramu9cc9q3qcqiv4ue8a6
            references roles,
    user_id     bigint       not null
        constraint fkhfh9dx7w3ubf1co1vdev94g3f
            references users,
    assigned_at timestamp(6) not null,
    primary key (role_id, user_id)
);

alter table user_roles
    owner to postgres;

create table vehicle_types
(
    vehicle_type_id  bigint generated by default as identity
        primary key,
    created_at       timestamp(6) not null,
    is_deleted       boolean      not null,
    updated_at       timestamp(6) not null,
    description      varchar(255),
    dimensions       varchar(100),
    maximum_load     double precision,
    name             varchar(50)  not null
        constraint uk60iboy5hwibufl71hsc73g35i
            unique,
    special_features varchar(255)
);

alter table vehicle_types
    owner to postgres;

create table vehicles
(
    vehicle_id          bigint generated by default as identity
        primary key,
    created_at          timestamp(6) not null,
    is_deleted          boolean      not null,
    updated_at          timestamp(6) not null,
    capacity            double precision,
    last_service_date   timestamp(6),
    make                varchar(50),
    mileage             integer,
    model               varchar(50),
    next_service_due    timestamp(6),
    purchase_date       timestamp(6),
    registration_number varchar(20)  not null
        constraint ukf6xfxoc4kprkjkst07tq63y6
            unique,
    status              varchar(255) not null
        constraint vehicles_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'AVAILABLE'::character varying, 'IN_SERVICE'::character varying, 'ASSIGNED'::character varying, 'MAINTENANCE'::character varying, 'OCCUPIED'::character varying])::text[])),
    year                integer,
    vehicle_type_id     bigint       not null
        constraint fkk3cs3vldlan30kg1x6b57i4fe
            references vehicle_types
);

alter table vehicles
    owner to postgres;

create table driver_vehicles
(
    id            bigint generated by default as identity
        primary key,
    created_at    timestamp(6) not null,
    is_deleted    boolean      not null,
    updated_at    timestamp(6) not null,
    assigned_date timestamp(6) not null,
    end_date      timestamp(6) not null,
    notes         varchar(255),
    status        varchar(255) not null
        constraint driver_vehicles_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'IN_REPAIR'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying])::text[])),
    driver_id     bigint       not null
        constraint fk8rps614yp73srgxojmrybnfwm
            references drivers,
    vehicle_id    bigint       not null
        constraint fk2yua66st8rjcncc4ui8dc9fhd
            references vehicles
);

alter table driver_vehicles
    owner to postgres;

create table incidents
(
    incident_id   bigint generated by default as identity
        primary key,
    created_at    timestamp(6) not null,
    is_deleted    boolean      not null,
    updated_at    timestamp(6) not null,
    date          timestamp(6) not null,
    description   varchar(255),
    incident_type varchar(50),
    status        varchar(255) not null
        constraint incidents_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PENDING'::character varying, 'CONFIRMED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying, 'CLOSED'::character varying])::text[])),
    driver_id     bigint       not null
        constraint fkr7yjttywvopo5vhaqqnx9pdl6
            references drivers,
    reported_by   bigint       not null
        constraint fklsdthe1tepxj95377b6saenkh
            references users,
    vehicle_id    bigint       not null
        constraint fkgwu3v09iuhjes7jexumiocuhw
            references vehicles
);

alter table incidents
    owner to postgres;

create table breakdowns
(
    breakdown_id bigint generated by default as identity
        primary key,
    created_at   timestamp(6)     not null,
    is_deleted   boolean          not null,
    updated_at   timestamp(6)     not null,
    description  varchar(255),
    repair_cost  double precision not null,
    repair_date  timestamp(6)     not null,
    incident_id  bigint           not null
        constraint fkd1f3eavr4r585jjakotakhw0e
            references incidents
);

alter table breakdowns
    owner to postgres;

create table damages
(
    damage_id       bigint generated by default as identity
        primary key,
    created_at      timestamp(6) not null,
    is_deleted      boolean      not null,
    updated_at      timestamp(6) not null,
    claim_number    varchar(50),
    description     varchar(255),
    insurance_claim boolean,
    repair_cost     double precision,
    incident_id     bigint       not null
        constraint fklk8sh5cyg40l0ssv5tgshin0i
            references incidents
);

alter table damages
    owner to postgres;

create table service_schedules
(
    schedule_id    bigint generated by default as identity
        primary key,
    created_at     timestamp(6) not null,
    is_deleted     boolean      not null,
    updated_at     timestamp(6) not null,
    scheduled_date timestamp(6),
    service_type   varchar(50),
    status         varchar(255) not null
        constraint service_schedules_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PENDING'::character varying, 'CONFIRMED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying, 'CLOSED'::character varying])::text[])),
    vehicle_id     bigint       not null
        constraint fkhsqb70ihyipsmx7ntdojxyusp
            references vehicles
);

alter table service_schedules
    owner to postgres;

create table technical_inspections
(
    inspection_id        bigint generated by default as identity
        primary key,
    created_at           timestamp(6) not null,
    is_deleted           boolean      not null,
    updated_at           timestamp(6) not null,
    comments             varchar(255),
    inspection_date      timestamp(6),
    inspector_name       varchar(100),
    next_inspection_date timestamp(6),
    result               varchar(255) not null
        constraint technical_inspections_result_check
            check ((result)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PASSED'::character varying, 'FAILED'::character varying])::text[])),
    vehicle_id           bigint       not null
        constraint fkn4po7guh4f3shc8f2xj6igmrr
            references vehicles
);

alter table technical_inspections
    owner to postgres;

create table transport_orders
(
    transport_order_id   bigint generated by default as identity
        primary key,
    created_at           timestamp(6) not null,
    is_deleted           boolean      not null,
    updated_at           timestamp(6) not null,
    transport_order_name varchar(255),
    scheduled_arrival    timestamp(6),
    scheduled_departure  timestamp(6),
    status               varchar(255) not null
        constraint transport_orders_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PENDING'::character varying, 'CONFIRMED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying, 'CLOSED'::character varying])::text[])),
    assigned_driver_id   bigint
        constraint fkpcccuk8x8wi2bwsd3joldijoe
            references drivers,
    assigned_vehicle_id  bigint
        constraint fkfsbal5h89r9rruw6axk29d1qc
            references vehicles,
    end_location_id      bigint
        constraint fk5f17x3qtp4o1lpt6abw13yx7j
            references locations,
    start_location_id    bigint
        constraint fk2n5hb0xo0o404nne0ofa48b2a
            references locations
);

alter table transport_orders
    owner to postgres;

create table orders
(
    order_id           bigint generated by default as identity
        primary key,
    created_at         timestamp(6) not null,
    is_deleted         boolean      not null,
    updated_at         timestamp(6) not null,
    order_type         varchar(255) not null
        constraint orders_order_type_check
            check ((order_type)::text = ANY
                   ((ARRAY ['CLIENT'::character varying, 'SUBCONTRACTOR'::character varying, 'SUPPLIER'::character varying, 'OTHER'::character varying])::text[])),
    status             varchar(255) not null
        constraint orders_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PENDING'::character varying, 'CONFIRMED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying, 'CLOSED'::character varying])::text[])),
    client_order_id    bigint
        constraint fkbi65cvfkpdwgvhgl2etg9vje
            references client_orders,
    transport_order_id bigint
        constraint fkrqvg8dm30y0opoqde0mqvdfw5
            references transport_orders
);

alter table orders
    owner to postgres;

create table transport_order_client_orders
(
    transport_order_id bigint not null
        constraint fk8nbif0ksxi71f4d4t71ewx9xx
            references transport_orders,
    client_order_id    bigint not null
        constraint fkt3fuby60n13sub067gvclfvyd
            references client_orders,
    primary key (transport_order_id, client_order_id)
);

alter table transport_order_client_orders
    owner to postgres;

create table vehicle_repairs
(
    service_id       bigint generated by default as identity
        primary key,
    created_at       timestamp(6) not null,
    is_deleted       boolean      not null,
    updated_at       timestamp(6) not null,
    cost             double precision,
    description      varchar(255),
    next_service_due timestamp(6),
    service_center   varchar(100),
    service_date     timestamp(6),
    service_type     varchar(50),
    vehicle_id       bigint       not null
        constraint fkjoh9un41ythmens2mngp4lds9
            references vehicles
);

alter table vehicle_repairs
    owner to postgres;

create table transports
(
    transport_id       bigint generated by default as identity
        primary key,
    created_at         timestamp(6) not null,
    is_deleted         boolean      not null,
    updated_at         timestamp(6) not null,
    actual_arrival     timestamp(6),
    actual_departure   timestamp(6),
    notes              varchar(255),
    status             varchar(255) not null
        constraint transports_status_check
            check ((status)::text = ANY
                   ((ARRAY ['NEW'::character varying, 'PENDING'::character varying, 'CONFIRMED'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying, 'CANCELLED'::character varying, 'CLOSED'::character varying])::text[])),
    driver_id          bigint
        constraint fki82vj9n4pe2k5fbgdmj8mc8tr
            references drivers,
    transport_order_id bigint       not null
        constraint ukkkccon4xqrbiyvftdmk2lcgye
            unique
        constraint fk9v2lowcrba0vbqybbmb6cw0p8
            references transport_orders,
    vehicle_id         bigint
        constraint fkseft20lm6wn4wx463gra3v7d5
            references vehicles
);

alter table transports
    owner to postgres;

create table shipping_documents
(
    document_id     bigint generated by default as identity
        primary key,
    created_at      timestamp(6) not null,
    is_deleted      boolean      not null,
    updated_at      timestamp(6) not null,
    document_number varchar(50),
    document_type   varchar(50),
    file_url        varchar(255),
    issue_date      timestamp(6) not null,
    transport_id    bigint       not null
        constraint fkjww5w6m4gfi0jsrmchufghxdu
            references transports
);

alter table shipping_documents
    owner to postgres;

create table fcm_tokens
(
    token_id  bigint generated by default as identity
        primary key,
    fcm_token varchar(500) not null
        constraint uktgq9e1yv7gjnen5k9mbo2u9v
            unique,
    user_id   bigint       not null
        constraint fkj2kob865pl9dv5vwrs2pmshjv
            references users
);

alter table fcm_tokens
    owner to postgres;

